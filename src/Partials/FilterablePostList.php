<?php

namespace Cubetech\Partials;

use \Cubetech\Rendering\IRenderable;
use \Cubetech\Base\ViewController;
use \Cubetech\Theme;

/**
 * Class to hanlde Archivepages with filters
 * filters are generated by categories availlable and
 * will not exclude empty categories (No posts assigned)
 *
 * @author Marc Mentha <marc@cubetech.ch>
 * @since 1.0.0
 * @version 1.0.0
 */
class FilterablePostList implements IRenderable
{
    
    /**
     * Namespace for cards as string to instantiate cards for the given posttype
     */
    const CARD_NAMESPACE = '\\Cubetech\\Cards\\';
    
    protected $viewDirectory;
    
    /**
     * List of availlable WP_Terms
     *
     * @var array of WP_Term
     */
    protected $filters;
    
    /**
     * List of card objects of the specific posttype to display
     *
     * @var array
     */
    protected $cards;
    
    /**
     * Ho wide a single card should be displayed
     * in frontend
     *
     * @var string
     */
    public $childWidth;
    
    /**
     * If there is a GET parameter with a term
     * this variable keeps track of it and is needed
     * to set the correct filter in frontend
     *
     * @var string
     */
    public $activeFilter;
    
    /**
     * Constructor function will initialize the cards
     * and filters
     * Cards are initialized with the posttype
     * If the GET parameter term is set, it will be sanitized and
     * later used in frontent to deterine which filter should be active stated
     *
     * @param string $posttype
     * @param string $childWidth
     */
    public function __construct($posttype, $childWidth = 'uk-width-1-2@m')
    {
        
        $this->childWidth = $childWidth;
        $this->filters = $this->createFilters($posttype);
        $this->cards = $this->createCards($posttype);
        if (isset($_GET['term']) && !is_array($_GET['term'])) {
            $this->activeFilter = sanitize_text_field($_GET['term']);
        }
        else {
            $this->activeFilter = '*';
        }
        $this->viewDirectory = get_template_directory() . '/views/template-parts/filterable-post-list.php';
    }
    
    /**
     * Create a list of availlable categories
     *
     * @param string $posttype
     * @return array list of WP_Term
     *
     * @author Marc Mentha <marc@cubetech.ch>
     * @since 1.0.0
     * @version 1.0.0
     */
    private function createFilters($posttype)
    {
        if ($posttype === 'post') {
            $filters = get_terms('category');
        }
        else {
            $filters = get_terms($posttype . '-category');
        }
        if ($filters instanceof \WP_Error) {
            return false;
        }
        else {
            return $filters;
        }
    }
    
    /**
     * Takes the posttype and genereates a string with the
     * full path and Namespace to the card related to this posttype
     *
     * @param string $posttype
     * @return array cards extending from BaseCard
     *
     * @author Marc Mentha <marc@cubetech.ch>
     * @since 1.0.0
     * @version 1.0.0
     */
    private function createCards($posttype)
    {
        $posts = Theme::getPosts([
            'post_type'      => $posttype,
            'posts_per_page' => -1,
        ]);
        if (count($posts) > 0) {
            $cards = [];
            if ($posttype === 'post') {
                $cardName = self::CARD_NAMESPACE . 'StandardCard';
            }
            else {
                $cardName = self::CARD_NAMESPACE . ucwords($posttype) . 'Card';
            }
            foreach ($posts as $post) {
                $cards[] = new $cardName($post);
            }
            return $cards;
        }
        return false;
    }
    
    /**
     * Inherited function from IRenderable
     * Will get the template and includes it
     *
     * @return void
     *
     * @author Marc Mentha <marc@cubetech.ch>
     * @since 1.0.0
     * @version 1.0.0
     */
    public function render()
    {
        if (defined('WP_DEBUG') && WP_DEBUG) {
            echo '<!-- BEGIN FilterablePostList -->';
        }
        if (file_exists($this->viewDirectory)) {
            include $this->viewDirectory;
        }
        else {
            if (defined('WP_DEBUG') && WP_DEBUG) {
                echo '<p class="uk-text-danger uk-text-bold uk-text-center">filterable-post-list not found in views/template-parts</p>';
            }
        }
        if (defined('WP_DEBUG') && WP_DEBUG) {
            echo '<!-- END FilterablePostList -->';
        }
    }
}